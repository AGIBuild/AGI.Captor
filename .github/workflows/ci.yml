name: Main CI/CD

# 主开发分支集成和预发布构建
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  actions: read
  id-token: write
  packages: write

env:
  DOTNET_VERSION: '9.0.x'
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build-info:
    name: 📋 Build Information
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      build-number: ${{ steps.version.outputs.build-number }}
      
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🛠️ Setup Environment
      uses: ./.github/actions/setup-environment
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: 📊 Get build information
      id: version
      shell: pwsh
      run: |
        $buildNumber = "${{ github.run_number }}"
        $shortSha = "${{ github.sha }}".Substring(0, 7)
        
        try {
          ./build.ps1 Info
          $version = "main-alpha.$buildNumber+$shortSha"
        } catch {
          Write-Warning "Build info failed, using fallback"
          $version = "1.3.0-alpha.$buildNumber+$shortSha"
        }
        
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "build-number=$buildNumber" >> $env:GITHUB_OUTPUT
        
        Write-Host "🏗️ Build: $buildNumber"
        Write-Host "🏷️ Version: $version"

  # Use reusable workflow for build and test
  test-and-quality:
    name: 🧪 Test & Quality
    uses: ./.github/workflows/_reusable-build.yml
    needs: build-info
    with:
      configuration: 'Release'
      enable-coverage: true
      upload-artifacts: true

  # Use reusable workflow for multiplatform build
  build-preview:
    name: 🚀 Build Preview
    uses: ./.github/workflows/_reusable-multiplatform.yml
    needs: [build-info, test-and-quality]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    with:
      configuration: 'Release'
      skip-tests: true
      create-packages: false

  preview-summary:
    name: 📋 Preview Summary
    runs-on: ubuntu-latest
    needs: [build-info, test-and-quality, build-preview]
    if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📊 Build Status Summary
      shell: pwsh
      run: |
        Write-Host "🚀 Main Branch Preview Build Complete"
        Write-Host "======================================="
        Write-Host "Version: ${{ needs.build-info.outputs.version }}"
        Write-Host "Build: ${{ needs.build-info.outputs.build-number }}"
        Write-Host "Tests: ${{ needs.test-and-quality.result }}"
        Write-Host "Preview Builds: ${{ needs.build-preview.result }}"
        Write-Host ""
        Write-Host "✅ Ready for release branch creation!"