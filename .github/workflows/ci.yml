name: Main CI/CD

# 主开发分支CI - 持续集成和预发布构建
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  security-events: write
  actions: read
  id-token: write
  packages: write

env:
  DOTNET_VERSION: '9.0.x'
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build-info:
    name: 📋 Build Information
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      build-number: ${{ steps.version.outputs.build-number }}
      
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: ⚙️ Configure Git for GitVersion
      run: |
        git config --global --add safe.directory /github/workspace
        git config --global --add safe.directory $(pwd)
        
    - name: 📊 Get build information
      id: version
      shell: pwsh
      run: |
        $buildNumber = "${{ github.run_number }}"
        $shortSha = "${{ github.sha }}".Substring(0, 7)
        
        try {
          ./build.ps1 Info
          $version = "main-alpha.$buildNumber+$shortSha"
        } catch {
          Write-Warning "Build info failed, using fallback"
          $version = "1.3.0-alpha.$buildNumber+$shortSha"
        }
        
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "build-number=$buildNumber" >> $env:GITHUB_OUTPUT
        
        Write-Host "🏗️ Build: $buildNumber"
        Write-Host "🏷️ Version: $version"

  test-and-quality:
    name: 🧪 Test & Quality
    runs-on: ubuntu-latest
    needs: build-info
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: ⚙️ Configure Git for GitVersion
      run: |
        git config --global --add safe.directory /github/workspace
        git config --global --add safe.directory $(pwd)
        
    - name: 🔨 Build and Test
      shell: pwsh
      run: |
        ./build.ps1 Clean
        ./build.ps1 Build Test --coverage
        
    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-ubuntu
        path: |
          artifacts/test-results/
          artifacts/coverage/
        retention-days: 7

  build-preview:
    name: 🚀 Build Preview (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    needs: [build-info, test-and-quality]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    strategy:
      matrix:
        include:
          - platform: win-x64
            os: windows-latest
          - platform: linux-x64  
            os: ubuntu-latest
          - platform: osx-x64
            os: macos-13
          - platform: osx-arm64
            os: macos-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: ⚙️ Configure Git for GitVersion
      run: |
        git config --global --add safe.directory /github/workspace
        git config --global --add safe.directory $(pwd)
        
    - name: 🔨 Build and Publish
      shell: pwsh
      run: |
        ./build.ps1 Clean
        ./build.ps1 Publish --rids ${{ matrix.platform }}
        
    - name: 📦 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: preview-${{ matrix.platform }}
        path: artifacts/publish/${{ matrix.platform }}/
        retention-days: 7

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos]
    # Run when a GitHub Release is published, or when a tag starting with 'v' is pushed
    if: |
      github.event_name == 'release' || 
      startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: ⚙️ Configure Git for GitVersion
      run: |
        git config --global --add safe.directory /github/workspace
        git config --global --add safe.directory $(pwd)
        
    - name: 🔍 Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: csharp
        
    - name: 🔨 Build for analysis
      shell: pwsh
      run: |
        ./build.ps1 Build
        
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  preview-summary:
    name: 📋 Preview Summary
    runs-on: ubuntu-latest
    needs: [build-info, test-and-quality, build-preview, security-scan]
    if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📊 Build Status Summary
      shell: pwsh
      run: |
        Write-Host "🚀 Main Branch Preview Build Complete"
        Write-Host "======================================="
        Write-Host "Version: ${{ needs.build-info.outputs.version }}"
        Write-Host "Build: ${{ needs.build-info.outputs.build-number }}"
        Write-Host "Tests: ${{ needs.test-and-quality.result }}"
        Write-Host "Security: ${{ needs.security-scan.result }}"
        Write-Host "Preview Builds: ${{ needs.build-preview.result }}"
        Write-Host ""
        Write-Host "✅ Ready for release branch creation!"