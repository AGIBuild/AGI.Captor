name: 'Publish Package'
description: 'Build and package applications for specific runtime'
author: 'AGI.Kapster Team'

inputs:
  runtime-id:
    description: 'Target runtime identifier (win-x64, linux-x64, osx-x64, osx-arm64)'
    required: true
  configuration:
    description: 'Build configuration'
    required: false
    default: 'Release'
  package:
    description: 'Create platform-specific packages'
    required: false
    default: 'true'

outputs:
  artifact-path:
    description: 'Path to published artifacts'
    value: artifacts/publish/${{ inputs.runtime-id }}

runs:
  using: "composite"
  steps:
    - name: üöÄ Publish for ${{ inputs.runtime-id }}
      shell: pwsh
      run: |
        $publishArgs = @("Publish", "--configuration", "${{ inputs.configuration }}", "--rids", "${{ inputs.runtime-id }}")
        
        Write-Host "Executing: ./build.ps1 Clean"
        ./build.ps1 Clean
        
        Write-Host "Executing: ./build.ps1 $($publishArgs -join ' ')"
        & ./build.ps1 @publishArgs
        
    - name: üì¶ Create packages
      if: inputs.package == 'true'
      shell: pwsh
      run: |
        $packageArgs = @("Package", "--configuration", "${{ inputs.configuration }}", "--rids", "${{ inputs.runtime-id }}")
        Write-Host "Executing: ./build.ps1 $($packageArgs -join ' ')"
        & ./build.ps1 @packageArgs
        
    - name: üìÇ Verify publish artifacts
      shell: pwsh
      run: |
        $publishPath = "artifacts/publish/${{ inputs.runtime-id }}"
        Write-Host "Checking publish directory: $publishPath"
        if (Test-Path $publishPath) {
          Write-Host "‚úÖ $publishPath directory exists"
          Get-ChildItem $publishPath -Recurse | ForEach-Object { Write-Host "  $($_.FullName)" }
        } else {
          Write-Host "‚ùå $publishPath directory not found"
          Write-Host "Available directories in artifacts/:"
          if (Test-Path "artifacts") {
            Get-ChildItem "artifacts" -Directory | ForEach-Object { Write-Host "  $($_.Name)" }
          } else {
            Write-Host "  No artifacts directory found"
          }
        }